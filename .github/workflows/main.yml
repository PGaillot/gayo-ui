name: Deploy
run-name: ${{ github.actor }} deploy ${{ github.repository }} process 🚀

on:
    push:
        branches:
            - master

jobs: 
    build:
        runs-on: ubuntu-latest
        steps:
          - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
          - uses: actions/checkout@v3

          - name: 🪢 Use Node.js 18
            uses: actions/setup-node@v3
            with:
              node-version: 18.x
              registry-url: 'https://registry.npmjs.org'

          - name: 🚀 Update version
            run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
            env:
             NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
             commitmsg: ${{ github.event.head_commit.message }}
          
          - name: Extract owner and repo
            id: extract
            run: |
              REPO=${{ github.repository }}
              OWNER=$(echo $REPO | cut -d'/' -f1)
              REPO_NAME=$(echo $REPO | cut -d'/' -f2)
              echo "OWNER=$OWNER" >> $GITHUB_ENV
              echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV
        
          - name: 🛠️ Install lib dependencies
            run: |
               npm ci
               npm install @octokit/rest
  
          - name: 📦 Publish lib
            run: node ../../scripts/publish-package.cjs
            env:
              GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              OWNER: ${{ env.OWNER }}
              REPO: ${{ env.REPO_NAME }}
              NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
            working-directory: ./projects/gayo-lib/

          - name: 🤖 Commit new version.
            uses: stefanzweifel/git-auto-commit-action@v5
            with:
              commit_message: 🤖 | ${{ env.commitmsg }}

          - name: 🏗️ Build Website
            run: npm run build-storybook

          - name: 🛠️ Install dependencies
            run: npm ci

          - name: 🤝 Deploy on Server 
          
            uses: appleboy/scp-action@v0.1.7
            with:
              host: ${{ secrets.SSH_HOST }} 
              username: ${{ secrets.SSH_USERNAME }}
              password: ${{ secrets.SSH_PASS }}
              port: ${{ secrets.SSH_PORT }}
              source: './storybook-static/*'
              target: '/var/www/html/${{ github.repository }}'
